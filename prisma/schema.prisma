// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String
  password    String
  // sex         String?
  age         Int?
  avatar      String?
  cover       String?
  phone       String?
  niceName    String?    @map("nick_name")
  address     String?
  birthday    String?
  chat        String?
  qq          String?
  description String?
  // followers    User[] @relation(name: "FollowersRelation", fields: [followerId], references: [id])
  // followerId  Int
  // following   User[] @relation(name: "FollowingRelation", fields: [followingId], references: [id])
  // followingId Int
  posts       Post[]
  comments    Comment[]
  email       String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
